{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/server.js","webpack:///external \"babel-polyfill\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"morgan\"","webpack:///external \"source-map-support\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA,mBAAO,CAAC,8CAAoB;AAC5B,mBAAO,CAAC,sBAAQ;AAChB,mBAAO,CAAC,sCAAgB;AACxB,gBAAgB,mBAAO,CAAC,wBAAS;AACjC,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,mBAAmB,mBAAO,CAAC,gCAAa;AACxC;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACtGtB;AAAA,OAAO,kBAAkB,GAAG,mBAAO,CAAC,+BAAS;AAC7C,cAAc,mBAAO,CAAC,wBAAS;AAC/B;;AAEA,OAAO,WAAW;;AAElB;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,KAAK;AACjD,GAAG;AACH;;AAEe,kEAAG,EAAC;;;;;;;;;;;;AChBnB,2C;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+C","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.js\");\n","require(\"source-map-support\");\nrequire(\"dotenv\").config();\nrequire(\"babel-polyfill\");\nconst express = require(\"express\");\nconst morgan = require(\"morgan\");\nconst bodyParser = require(\"body-parser\");\nvar router = express.Router();\n\nrouter.use(\n  morgan(\"tiny\"),\n  bodyParser.json(),\n  bodyParser.urlencoded({ extended: true })\n);\n\nrouter.use(\"/health\", function(req, res) {\n  res.send(\"OK\");\n});\n\n/* \n  If the customer innitiates the transaction manually from his phone... the two endpoints bellow get to be used\n*/\nrouter.use(\"/confirmation\", function(req, res) {\n  console.log(JSON.stringify(req.body, null, \"\\t\"));\n\n  let message = {\n    ResponseCode: \"00000000\",\n    ResponseDesc: \"success\"\n  };\n\n  // respond to safaricom servers with a success message\n  res.json(message);\n});\n\nrouter.use(\"/validation\", function(req, res) {\n  console.log(JSON.stringify(req.body, null, \"\\t\"));\n\n  let message = {\n    ResponseCode: \"00000000\",\n    ResponseDesc: \"success\"\n  };\n\n  // respond to safaricom servers with a success message\n  res.json(message);\n});\n\n/*\n  if you innitiated the transaction to his device directly...then the bellow endpoint gets called\n*/\nrouter.use(\"/lipaCallback/:txid\", function(req, res) {\n  /*\n    Also just to be clear, if someone got hold of your callback url they can \n    totally send you garbage transactions because there is no way to know its big brother safaricom calling\n\n    so use the txid's to check if you are the one who innitiated that call and mark if the txid doesnt exist.\n    then get a human to check them manually\n  */\n  console.log(JSON.stringify(req.body, null, \"\\t\"));\n\n  // you will recieve\n  // {\n  //   \"Body\": {\n  //     \"stkCallback\": {\n  //       \"MerchantRequestID\": \"23386-22xxx5994-1\",\n  //       \"CheckoutRequestID\": \"ws_CO_DMZ_395996794_2108xxxxxx0548221\",\n  //       \"ResultCode\": 0,\n  //       \"ResultDesc\": \"The service request is processed successfully.\",\n  //       \"CallbackMetadata\": {\n  //         \"Item\": [\n  //           {\n  //             \"Name\": \"Amount\",\n  //             \"Value\": 7\n  //           },\n  //           {\n  //             \"Name\": \"MpesaReceiptNumber\",\n  //             \"Value\": \"NHL533VVY3\"\n  //           },\n  //           {\n  //             \"Name\": \"Balance\"\n  //           },\n  //           {\n  //             \"Name\": \"TransactionDate\",\n  //             \"Value\": 20190821220551\n  //           },\n  //           {\n  //             \"Name\": \"PhoneNumber\",\n  //             \"Value\": 2547xxxxx108\n  //           }\n  //         ]\n  //       }\n  //     }\n  //   }\n  // }\n\n  let message = {\n    ResponseCode: \"00000000\",\n    ResponseDesc: \"success\"\n  };\n\n  // respond to safaricom servers with a success message\n  res.json(message);\n});\n\nexport default router;\n","const { default: router } = require(\"./index\");\nvar express = require(\"express\");\nvar app = express();\n\nconst { NODE_ENV } = process.env;\n\napp.use(\"/\", router);\n\nif (NODE_ENV !== \"test\") {\n  const server = app.listen(5000, () => {\n    let host = server.address().address;\n    let port = server.address().port;\n    console.log(`server listening on port ${port}`);\n  });\n}\n\nexport default app;\n","module.exports = require(\"babel-polyfill\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"morgan\");","module.exports = require(\"source-map-support\");"],"sourceRoot":""}